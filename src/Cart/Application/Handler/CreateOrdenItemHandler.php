<?php
namespace App\Cart\Application\Handler;

use App\Cart\Application\Command\CreateOrdenItemCommand;
use App\Cart\Application\DTO\OrdenItemDTO;
use App\Cart\Domain\Model\OrdenItem;
use App\Cart\Application\Repository\OrdenItemRepository;
use App\Cart\Application\Assembler\OrdenItemAssembler;
use App\Cart\Domain\ValueObject\Cantidad;
use App\Cart\Domain\ValueObject\OrdenId;
use App\Cart\Domain\ValueObject\ProductoId;

class CreateOrdenItemHandler
{
    private OrdenItemRepository $ordenItemRepository;
    private OrdenItemAssembler $ordenItemAssembler;
    public function __construct(OrdenItemRepository $ordenItemRepository, OrdenItemAssembler $ordenItemAssembler)
    {
        $this->ordenItemRepository = $ordenItemRepository;
        $this->ordenItemAssembler = $ordenItemAssembler;
    }

    public function __invoke(CreateOrdenItemCommand $command): ?OrdenItemDTO
    {
        $ordenItem = new OrdenItem(
            null, // Assuming ID is generated by the repository
            new ProductoId($command->id_producto),
            new OrdenId($command->id_orden),
            new Cantidad($command->cantidad)
        );
        $response = $this->ordenItemRepository->save($ordenItem);
        $result = $this->ordenItemAssembler->fromEntity(ordenItem: $response);

        return $result;

    }
}