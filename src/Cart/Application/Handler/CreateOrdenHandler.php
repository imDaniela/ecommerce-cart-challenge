<?php
namespace App\Cart\Application\Handler;

use App\Cart\Application\Command\CreateOrdenCommand;
use App\Cart\Application\DTO\OrdenDTO;
use App\Cart\Domain\Model\Orden;
use App\Cart\Application\Repository\OrdenRepository;
use App\Cart\Application\Assembler\OrdenAssembler;
use App\Cart\Domain\ValueObject\Username;

class CreateOrdenHandler
{
    private OrdenRepository $ordenRepository;
    private OrdenAssembler $ordenAssembler;
    public function __construct(OrdenRepository $ordenRepository, OrdenAssembler $ordenAssembler)
    {
        $this->ordenRepository = $ordenRepository;
        $this->ordenAssembler = $ordenAssembler;
    }

    public function __invoke(CreateOrdenCommand $command): ?OrdenDTO
    {
        $orden = new Orden(
            null, // Assuming ID is generated by the repository
            new Username($command->username),
            false
        );
        $response = $this->ordenRepository->save($orden);
        $result = $this->ordenAssembler->fromEntity(orden: $response);

        return $result;
    }
}